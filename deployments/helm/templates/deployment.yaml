apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: {{ .Values.replicas }}
  progressDeadlineSeconds: 30
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
      annotations:
        json_logs: 'true'
    spec:
      containers:
      - name: {{ .Values.name }}
        image: 410715645895.dkr.ecr.us-east-1.amazonaws.com/{{ .Values.name }}:{{ .Values.buildId }}
        ports:
        - containerPort: 8080
        - containerPort: 2112
        command: [/bin/sh]
        args: [-c, /app/main]
        env:
        - name: ENV
          value: {{ .Release.Namespace }}
        - name: LOG_LEVEL
          value: {{ .Values.log_level }}
        - name: SERVICE
          value: {{ .Values.name }}
        - name: SERVER_LISTEN_ADDR
          value: "0.0.0.0:8080"
        - name: HEALTHCHECK_ENABLED
          value: "true"
        - name: PROMETHEUS_ENABLED
          value: "true"
        - name: PPROF_ENABLED
          value: "true"
        - name: RDS_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}
              key: RDS_URL
        readinessProbe:
          httpGet:
            path: /ready
            port: 2112
          initialDelaySeconds: 5
          timeoutSeconds: 2
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 2112
          initialDelaySeconds: 5
          timeoutSeconds: 2
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1234
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
      - name: sensu
        image: sensu/sensu:latest
        command: [sensu-agent]
        args: [start, --backend-url wss://sensugo.sliideapp.net:8081, '--subscriptions
            {{ .Values.name }},sliide-service', --namespace {{ .Release.Namespace }}, --deregister, --log-level warn]
